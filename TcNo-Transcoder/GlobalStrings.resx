<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ErrDeleteQueue" xml:space="preserve">
    <value>There was an error deleting the old queue file. It will be left as is, for you to manually delete.
Error:
{0}</value>
  </data>
  <data name="ErrFailedSettingsFind" xml:space="preserve">
    <value>--------------------- INFORMATION ---------------------
--&gt; Settings.cfg file was generated.
--&gt; If this is your first time using this program, make sure to read the wiki:
--&gt; https://github.com/TcNobo/TcNo-Transcoder/wiki
--&gt; (You can delete the file to reset it at any stage)
-------------------------------------------------------</value>
  </data>
  <data name="ErrFailedSettingsRead" xml:space="preserve">
    <value>Failed to read settings file. Check everything is correct and try again.
Error: {0}</value>
    <comment>Displays when reading of settings.cfg fails.</comment>
  </data>
  <data name="ErrFileNotFoundException" xml:space="preserve">
    <value>The requested file was not found! Please make sure that it exists.
File: {0}</value>
  </data>
  <data name="ErrInaccess" xml:space="preserve">
    <value>The requested file was not found, or was inaccessible</value>
  </data>
  <data name="ErrNoNV" xml:space="preserve">
    <value>No Nvidia GPU was found. Try run as admin, update drivers or report this issue on GitHub, providing as much info as possible.</value>
  </data>
  <data name="ErrNoQueue" xml:space="preserve">
    <value>There was no queue file found. The program will automatically create one when you add to it. You can, of course, create a "queue.txt" and add to it yourself, leaving an extra new line at the end.</value>
  </data>
  <data name="ErrQueueEmpty" xml:space="preserve">
    <value>queue.exe appears to be empty. Please check the file contains a new file/folder on each new line, with no trailing spaces or extra characters. (A new line at the end of the file is intended)</value>
  </data>
  <data name="ErrQueueNotFound" xml:space="preserve">
    <value>queue.txt not found or inaccessible in ./extra/ folder</value>
  </data>
  <data name="ErrSettingNotFound" xml:space="preserve">
    <value>ERROR: {0} was not found in the settings file, or there was another error involving it.
Please verify the settings file and try again.
NOTE: The next time this program is run, the settings will reset (if the issue was not solved). Your old settings will be stored in settings.cfg.old. Feel free to add them back.</value>
    <comment>Displays when a setting is not found during settings.cfg verification.</comment>
  </data>
  <data name="ErrSettingNotFound2" xml:space="preserve">
    <value>ERROR: {0} was not found in the settings file again.
Settings have been reset, and program will launch normally on next start. Your old settings are located in settings.cfg.old.</value>
  </data>
  <data name="ErrStopped" xml:space="preserve">
    <value>Stopped.</value>
  </data>
  <data name="ErrTranscodeExists" xml:space="preserve">
    <value>The requested transcode file already exists. To overwrite, set "OverwriteExisting" to 1 in yout settings file.
File: {0}</value>
  </data>
  <data name="Info" xml:space="preserve">
    <value>Version: {0}
NvencC Version: {1}
Min. Nvidia Driver Version: {2}

GitHub: https://github.com/TcNobo/TcNo-Transcoder
GitHub Wiki: https://github.com/TcNobo/TcNo-Transcoder/wiki
YouTube: https://YouTube.com/TechNobo
Web: https://tcno.co/</value>
  </data>
  <data name="InfoAdminPrompt" xml:space="preserve">
    <value>Click "yes" when asked if you want to run as admin.
--&gt; Waiting for program completion...</value>
  </data>
  <data name="InfoAudio" xml:space="preserve">
    <value>TechNobo's Video Transcoder
------------------------------------------
FIRST: Audio ENCODERS and then DECODERS.

To see a list of videdo encoders, use -v

------------------------------------------
Listing available audio ENCODERS (output)
------------------------------------------

#

------------------------------------------
Listing available audio DECODERS (input)
------------------------------------------


#

------------------------------------------</value>
    <comment>Audio information. Displays when -a or --audio argument used.
(Command is run where # is)</comment>
  </data>
  <data name="InfoComplete" xml:space="preserve">
    <value>Everything complete.
---------------------
Start time: {0}
Finish time: {1}
---------------------
Thanks for using TechNobo's Transcoder!
---------------------
GitHub: https://github.com/TcNobo/TcNo-Transcoder
YouTube: https://YouTube.com/TechNobo
Web: https://tcno.co/</value>
    <comment>Displays when task processing finished</comment>
  </data>
  <data name="InfoCompleteNoTime" xml:space="preserve">
    <value>Everything complete.
---------------------
Thanks for using TechNobo's Transcoder!
---------------------
GitHub: https://github.com/TcNobo/TcNo-Transcoder
YouTube: https://YouTube.com/TechNobo
Web: https://tcno.co/</value>
  </data>
  <data name="InfoContextMenuComplete" xml:space="preserve">
    <value>--&gt; Finished!
You should now see "TcNo-Transcode" in your context menu.</value>
  </data>
  <data name="InfoDevices" xml:space="preserve">
    <value>NOTE:
When manually setting: use 0, 1, or any other integer, next to the GPU of your choice.
 
The following GPU's are available for NVEncC transcoding:</value>
    <comment>Device information. Displays when -d or --devices argument used.
(Command is run where # is)</comment>
  </data>
  <data name="InfoHelp" xml:space="preserve">
    <value>Hello.
Welcome to TechNobo's Video Transcoder {0}
built for generating Proxy files with multitrack audio quickly.

---------------------------------------

BASIC USAGE:
Edit settings in settings.cfg.
Either:
    - Run this .exe without arguments and follow instructions on screen.
    - Drag and drop a file/folder onto this .exe
    - Right click a file/folder, "Add to TcNo Transcode Queue" and run this .exe (See 'Queue information' below)

---------------------------------------

INFORMATION OPTIONS:
    -h, --help     Displays this help information
    -i, --info     Displays program + author info
    -d, --devices     Displays available GPUs
    -a, --audio     Displays available input + output audio codecs/formats
    -v, --video     Displays available input + output video codecs/formats
    -q, --queue     Instantly start processing your current queue
    -s, --shell     Display help to add/remove context menu shortcuts
    -n, --new     Creates a new queue, based on settings file.

---------------------------------------

TROUBLESHOOTING:
    - Make sure you're using the most updated Nvidia drivers. The project currently uses NVEncC version {1}. Make sure you're using Nvidia graphics driver {2} or later.


---------------------------------------
Queue information
---------------------------------------
You can queue items, in a .txt file to process them at a later stage, say, overnight.
in  {3}\extra\ you can create a 'queue.txt' file, and enter each video on a new line like so:
"E:\Videos\Video.mp4"
"E:\ToProcess\"
(You need the quotation marks)

Then, the next time you run TcNo-Transcoder.bat, you'll be asked if you want to process them.
---- BUT ----
The easier way to do this is:
Run {3}\extra\context menu\Add-Send-To.bat
To have a "Add to TcNo Transcode Queue" option whenever you right-click a file or folder.
(When clicked, it will add them to the .txt file, adding them to the queue)
To remove it, just run "Remove-Send-To.bat"


---------------------------------------
General information
---------------------------------------
Do NOT change the file/folder structure of this program.
If you do, things may not work as expected.
If you move where the files are located, and use the Shell menu: Remove and add them (use "shell help" for more info)

---------------------------------------
More info
---------------------------------------
For far more information, check the TcNo Transcoder Wiki https://github.com/TcNobo/TcNo-Transcoder/wiki</value>
    <comment>Help information. Displays when -h or --help argument used.</comment>
  </data>
  <data name="InfoItemComplete" xml:space="preserve">
    <value>Item complete.
---------------------
Start time: {0} | Finish time: {1}
---------------------</value>
  </data>
  <data name="InfoNVDriverNotMet" xml:space="preserve">
    <value>--------------------------------------
Minimum Nvidia Driver requirements not met. This will likely cause issues, but the program will continue.
--------------------------------------
Installed Nvidia Driver: {0}
Min. Driver required: {1}
Consider updating before continuing.
--------------------------------------</value>
  </data>
  <data name="InfoQueueComplete" xml:space="preserve">
    <value>Everything complete.
---------------------
Queue start time: {0}
Queue finish time: {1}
---------------------
Thanks for using TechNobo's Transcoder!
---------------------
GitHub: https://github.com/TcNobo/TcNo-Transcoder
YouTube: https://YouTube.com/TechNobo
Web: https://tcno.co/</value>
  </data>
  <data name="InfoSettingsOptions" xml:space="preserve">
    <value>There is no settings.cfg file in the program's directory. This is likely your first launch.
Pick a settings file to create, and enter it's number below:
- 1: Settings, with extra information. (For new users)
- 2: Just settings. No other information. (For advanced users)</value>
  </data>
  <data name="InfoSettingsOptionsResponse" xml:space="preserve">
    <value>Enter a number:</value>
  </data>
  <data name="InfoShell" xml:space="preserve">
    <value>The context menu is what pops up when you right-click anywhere.
If you add TcNo-Transcoder to the Windows Context Menu using "shell add", you can right-click:
- Files and Folders to:
    - ADD them to the queue.
    - START the queue.
- The background of a folder (The blank section, behind the files):
    - START the queue.
You can remove them at any time using "shell remove"

USAGE: shell &lt;add/remove&gt;

NOTE:
Do not edit the file/folder structure of this program!
If you move where the program files are located, remove and add the context menu options, or they will not work!</value>
  </data>
  <data name="InfoVideo" xml:space="preserve">
    <value>TechNobo's Video Transcoder
------------------------------------------

{0} --check - formats

------------------------------------------
Remember to scroll to the top.
ABOVE: Video Muxers and Demuxers.

    || D - : Demuxer(input) ONLY.
    || -M : Muxer(output) ONLY
    || DM : Demuxer and Muxer, both input and output available.

To see a list of audio encoders, use -a
------------------------------------------</value>
    <comment>Video information. Displays when -v or --video argument used.</comment>
  </data>
  <data name="InfoWelcome" xml:space="preserve">
    <value>Welcome to TechNobo's Video Transcoder {0}
------------------------
Run with -h or --help to display help. (Or enter "help" below)
Run with -i or --info to display info. (Or enter "info" below)
To add/remove context menu option (Right clicking files) enter "help shell" below.
Other commands to enter below: help, info
------------------------</value>
    <comment>Displays when the program starts</comment>
  </data>
  <data name="PrgAnyKeyToClose" xml:space="preserve">
    <value>PRESS ANY KEY TO CLOSE...</value>
  </data>
  <data name="PrgAnyKeyToContinue" xml:space="preserve">
    <value>PRESS ANY KEY TO CONTINUE...</value>
  </data>
  <data name="PrgChangeDir" xml:space="preserve">
    <value>Using {0}
The file will save to: {1}
If you want it saved to a new directory, exit, and set it in settings.cfg.
Press enter to continue...</value>
  </data>
  <data name="PrgChangeDirQueue" xml:space="preserve">
    <value>Using {0}
The files will save to their respective directories.
Resolution: {1}
FPS: {2}
Codec: {3}
If you want them saved to a new directory, or you want different settings: exit, and set theem in settings.cfg.
Press enter to continue...</value>
  </data>
  <data name="PrgContinue" xml:space="preserve">
    <value>Are you sure you wish to continue?</value>
  </data>
  <data name="PrgCorrect" xml:space="preserve">
    <value>Is this correct? (y/n):</value>
  </data>
  <data name="PrgDragDropNotice" xml:space="preserve">
    <value>ATTENTION!
Dragging files in will process them INSTANTLY using the settings in settings.cfg!

The following files will be processed:</value>
    <comment>Shows when files dragged onto program, before processing.</comment>
  </data>
  <data name="PrgDragDropPrompt" xml:space="preserve">
    <value>Drag and Drop input file/folder into here:</value>
  </data>
  <data name="PrgFollowingFiles" xml:space="preserve">
    <value>The following files will be processed:</value>
  </data>
  <data name="PrgNowProcessing" xml:space="preserve">
    <value>Now processing: {0}
Saving to: {1}</value>
  </data>
  <data name="PrgProcessingCancelled" xml:space="preserve">
    <value>Queue processing cancelled.</value>
    <comment>Displays when transcode cancelled</comment>
  </data>
  <data name="PrgQueryQueue" xml:space="preserve">
    <value>A queue is detected. Would you like to process it? (Y to process / ANY other key to skip):</value>
  </data>
  <data name="PrgQueueFollowingFiles" xml:space="preserve">
    <value>{0} is a directory. The following will be processed:</value>
  </data>
  <data name="PrgQueueList" xml:space="preserve">
    <value>--------------------------------------
The following files will be processed
--------------------------------------
{0}
--------------------------------------

You can edit the queue in the TcNo-Transcoder/extra/queue.txt file.
Do you want to process these files? (y/n):</value>
  </data>
  <data name="PrgScrollUp" xml:space="preserve">
    <value>List may be long, you might want to scroll up.</value>
  </data>
  <data name="PrgVerifyRenderSettings" xml:space="preserve">
    <value>{0} will render with the current settings:
Resolution: {1}
FPS: {2}
Codec: {3}

This command will be processed:</value>
  </data>
  <data name="_LOCALISEDSETTINGS_ADVANCED" xml:space="preserve">
    <value># ----------------------------------------------------
# Welcome to TechNobo's Video Transcoder settings
# Created by TechNobo (Wesley Pyburn): https://tcno.co/
# GitHub Repo: https://github.com/TcNobo/TcNo-Transcoder
# ----------------------------------------------------


# ----------------------------------------------------
# --------------------- REQUIRED ---------------------
# ----------------------------------------------------
OutputFormat=mp4
CopyAudio=0

# REQUIRES CopyAudio setting above to be 0 for custom codec
# CopyAudio 0 and AudioCodec blank will not copy audio at all.
AudioCodec=
Suffix=_Proxy

# No trailing \
OutputDirectory=
Resolution=640x360
FPS=60
VideoCodec=h264
EncoderProfile=baseline
Level=auto
Preset=performance
OutputDepth=8
CUDASchedule=spin
SampleAspectRatio=1:1
Lookahead=16
GOPLength=0
BFrames=3
ReferenceFrames=3
MVPrecision=full-pel
Colormatrix=undef

# --------------------------
# ------- h264 ONLY -------
# --------------------------
# Ignored if not exporting to h264
# --------------------------
# On: 1, Off: 0
CABAC=1

# On: 1, Off: 0, For non-h264: blank
Deblock=1

# --------------------------

# --------------------------
# ------ VBR SETTINGS ------
# --------------------------
Bitrate=cqp 15
VBRQuality=-1
MaxBitrate=-1
# --------------------------




# ----------------------------------------------------
# --------------------- OPTIONAL ---------------------
# ----------------------------------------------------
OverwriteExisting=0
GPU=0

# &lt;32/64&gt;
OSBit=
OtherArgs=
Override=0
DeleteOldQueue=0
DelQueueOnNew=0


# Run command after completion.
# When a file finishes transcoding, the command will run.
# ----------------
# Variables
# ----------------
# %outF% is the output file that the program made. EG: D:\Videos\p_Proxy.mp4
# EG: ffmpeg -i "%outF%" "%outF%.mp3"
# Will be run as: ffmpeg -i "D:\Videos\p_Proxy.mp4" "D:\Videos\p_Proxy.mp4.mp3"
# For example.
# ----------------
# Keep in mind, the program is in either the x32 or x64 directory when this command is run.
# You can run multiple lines of code by creating another file (in the base directory -- not x32 or x64)
# Create a runafter.bat file in your TcNo-Transcoder directory, then enter the following as AfterCompletion:
# CALL runafter.bat
#
# This will open runafter.bat, in the same place as TcNo-Transcoder.exe. 
#
# Remember, this will run in the TcNo-Transcoder directory. You may need the full path of a program, if it's not already in PATH. IE: "c:\ffmpeg\ffmpeg.exe" instead of just entering "ffmpeg". Test it yourself by running the command from the TcNo-Transcoder folder.
# ----------------
# Default is blank.
# ----------------
AfterCompletion=</value>
  </data>
  <data name="_LOCALISEDSETTINGS_SIMPLE" xml:space="preserve">
    <value># ----------------------------------------------------
# Welcome to TechNobo's Video Transcoder settings
# Created by TechNobo (Wesley Pyburn): https://tcno.co/
# GitHub Repo: https://github.com/TcNobo/TcNo-Transcoder
# ----------------------------------------------------


# ----------------------------------------------------
# --------------------- REQUIRED ---------------------
# ----------------------------------------------------
# Output format
OutputFormat=mp4

# Copy the audio?
# Yes = 1, No = 0.
# Converting from WEBM to MP4, with Opus audio causes issues, for example.
CopyAudio=0

# Audio codec
# REQUIRES CopyAudio setting above to be 0 for custom codec
# CopyAudio 0 and AudioCodec blank will not copy audio at all.
# To check available encoders, start TcNo-Transcoder.exe with the -a or --audio argument.
# OR enter either x32 or x64, and run "nvencc --check-encoders" or "NVEncC64 --check-encoders"
AudioCodec=

# Ouput suffix
# What goes after the file, just before the extension
# suf=_Proxy &gt;&gt; eg: test_Proxy.mp4
Suffix=_Proxy

# Output directory
# Leave blank to save to the input file's folder.
# MAKE SURE IT DOES NOT HAVE A TRAILING \ 
# EG: D:\Proxies
OutputDirectory=

# Resolution of the output file.
# eg. &lt;640x360/1920x1080 etc&gt; 
Resolution=640x360

# FPS of the output file.
# fps=&lt;24/30/60/120/144 etc&gt;
FPS=60

# Codec of the output file.
# codec=&lt;h264/h265&gt;
# To check available encoders, start TcNo-Transcoder.exe with the -v or --video argument.
# OR enter either x32 or x64, and run "nvencc --check-formats" or "NVEncC64 --check-formats"
VideoCodec=h264

# Output profile
# H.264: baseline, main, high(default), high444
# HEVC : main, main10, main444
# profile=&lt;baseline/high/main10 etc&gt;
EncoderProfile=baseline

# Output level
# - H.264: auto(default), 1, 1b, 1.1, 1.2, 1.3, 2, 2.1, 2.2, 3, 3.1, 3.2, 4, 4.1, 4.2, 5, 5.1, 5.2
# - HEVC:  auto(default), 1, 2, 2.1, 3, 3.1, 4, 4.1, 5, 5.1, 5.2, 6, 6.1, 6.2
# level=&lt;auto/1/4.2/5.1 etc&gt;
Level=auto

# Encoder preset
# preset=&lt;default/performance/quality&gt;
Preset=performance

# Output depth
# outdp=&lt;8/10&gt;
OutputDepth=8

# CUDA Schedule
# CUDA schedule mode (default: sync).
# auto: let CUDA driver to decide
# spin  : CPU will spin when waiting for GPU tasks, will provide the highest performance but with high CPU utilization.
# yield : CPU will yield when waiting for GPU tasks.
# sync  : CPU will sleep when waiting for GPU tasks, performance might drop slightly, while CPU utilization will be lower, especially on HW decode mode.
CUDASchedule=spin

# Sample Aspect Ratio
# sar=&lt;int&gt;:&lt;int&gt;
# Leave blank if you won't use it.
SampleAspectRatio=1:1

# Lookahead
# Enable lookahead and lookahead depth (1-32). The default is 16 frames.
Lookahead=16

# GOP Length
# Default 0 frames
GOPLength=0

# Number of Consecutive B-Frames
# -h264 default: 3
# -HEVC default: 0
BFrames=3

# Number of Reference frames
# Default 3 frames
ReferenceFrames=3

# MV Precision
# Default: auto
# Can also be to:
# - Q-pel (High Quality)
# - half-pel
# - full-pel (Low Quality)
MVPrecision=full-pel

# Colormatrix
# Options: undef, auto, bt709, smpte170m, bt470bg, smpte240m, YCgCo, fcc, GBR, bt2020nc, bt2020c
# cm=&lt;string&gt;
Colormatrix=undef

# --------------------------
# ------- h264 ONLY -------
# --------------------------
# Ignored if not exporting to h264
# --------------------------
# Use CABAC
# ON: cabac=1
# OFF: cabac=0
CABAC=1

# Deblock filter
# ON: 1
# OFF: 0
# If you're not using h264, leave it blank!
Deblock=1

# --------------------------

# --------------------------
# ------ VBR SETTINGS ------
# --------------------------
# Set the output bitrate/quality
# cqp &lt;int&gt;                encode in Constant QP Mode
# cqp &lt;int&gt;:&lt;int&gt;:&lt;int&gt;    encode in Constant QP Mode
# vbr &lt;int&gt;                bitrate for VBR mode (kbps)
# vbrhq &lt;int&gt;              bitrate for VBR (High Quality) mode (kbps)
# cbr &lt;int&gt;                bitrate for CBR mode (kbps)
# cbrhq &lt;int&gt;              bitrate for CBR (High Quality) mode (kbps)
Bitrate=cqp 15

# Set VBR quality (USE -1 IF NOT USING VBR ABOVE!)
# target quality for VBR mode (0-51, 0=auto)
# vbrq=&lt;0-51&gt;
VBRQuality=-1

# Set Max Bitrate in kbps (USE -1 IF NOT USING VBR ABOVE!)
# maxbr=&lt;int&gt;
MaxBitrate=-1
# --------------------------




# ----------------------------------------------------
# --------------------- OPTIONAL ---------------------
# ----------------------------------------------------
# Overwrite existing transcoded file, if exists.
# Default: 0 -&gt; Will not overwrite.
# 1 -&gt; Overwrites existing transcode, if exists already.
OverwriteExisting=0

# Choose a GPU to use
# To get a list of GPU's, run the command "NVEncC --check-device" or "NVEncC64 --check-device"
# MAKE SURE YOU KNOW WHAT GPU YOU'RE SETTING IT TO!
# Leave this BLANK to let NVEncC choose the best card automatically.
# gpu=&lt;int&gt;    eg. gpu=1
GPU=0

# bit=&lt;32/64&gt;    -- Chooses to use 32 or 64 bit Windows. Detects automatically if not set.
OSBit=

# Other arguments. Will be appended to the end of the command that is run.
# nvencc -arg -arg -arg -[Added Here]
# eg. otherargs=--interlace tff --crop 20,20,20,20 
# To see what arguments are available, enter either x32 or x64, and run "nvencc --help" or "NVEncC64 -h"
OtherArgs=

# Override EVERY other setting.
# Leaves only the input and output file automated. Set everything yourself in otherargs.
# Set to 1 to enable.
# 0 to disable (default)
Override=0

# Delete queue when processing started
# If to 1, the queue file will be deleted BEFORE proccesing.
# If processing fails, you will have to remake the queue
# Default is 0
DeleteOldQueue=0

# Delete queue when creating a new queue, via Shell menu.
# Default: 0
# 1 = Delete queue, when "New queue" used.
DelQueueOnNew=0

# Run command after completion.
# When a file finishes transcoding, the command will run.
# ----------------
# Variables
# ----------------
# %outF% is the output file that the program made. EG: D:\Videos\p_Proxy.mp4
# EG: ffmpeg -i "%outF%" "%outF%.mp3"
# Will be run as: ffmpeg -i "D:\Videos\p_Proxy.mp4" "D:\Videos\p_Proxy.mp4.mp3"
# For example.
# ----------------
# Keep in mind, the program is in either the x32 or x64 directory when this command is run.
# You can run multiple lines of code by creating another file (in the base directory -- not x32 or x64)
# Create a runafter.bat file in your TcNo-Transcoder directory, then enter the following as AfterCompletion:
# CALL runafter.bat
#
# This will open runafter.bat, in the same place as TcNo-Transcoder.exe. 
#
# Remember, this will run in the TcNo-Transcoder directory. You may need the full path of a program, if it's not already in PATH. IE: "c:\ffmpeg\ffmpeg.exe" instead of just entering "ffmpeg". Test it yourself by running the command from the TcNo-Transcoder folder.
# ----------------
# Default is blank.
# ----------------
AfterCompletion=</value>
  </data>
</root>